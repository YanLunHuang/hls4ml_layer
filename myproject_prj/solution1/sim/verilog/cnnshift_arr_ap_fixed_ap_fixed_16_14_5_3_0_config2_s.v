// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module cnnshift_arr_ap_fixed_ap_fixed_16_14_5_3_0_config2_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        data_V_read,
        output_V_address0,
        output_V_ce0,
        output_V_we0,
        output_V_d0,
        output_V_q0,
        output_V_address1,
        output_V_ce1,
        output_V_we1,
        output_V_d1,
        output_V_q1
);

parameter    ap_ST_fsm_state1 = 7'd1;
parameter    ap_ST_fsm_state2 = 7'd2;
parameter    ap_ST_fsm_state3 = 7'd4;
parameter    ap_ST_fsm_state4 = 7'd8;
parameter    ap_ST_fsm_state5 = 7'd16;
parameter    ap_ST_fsm_state6 = 7'd32;
parameter    ap_ST_fsm_state7 = 7'd64;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [127:0] data_V_read;
output  [3:0] output_V_address0;
output   output_V_ce0;
output   output_V_we0;
output  [127:0] output_V_d0;
input  [127:0] output_V_q0;
output  [3:0] output_V_address1;
output   output_V_ce1;
output   output_V_we1;
output  [127:0] output_V_d1;
input  [127:0] output_V_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[3:0] output_V_address0;
reg output_V_ce0;
reg output_V_we0;
reg[127:0] output_V_d0;
reg[3:0] output_V_address1;
reg output_V_ce1;
reg output_V_we1;
reg[127:0] output_V_d1;

(* fsm_encoding = "none" *) reg   [6:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    layer_in_row_Array_V_0_0_ce0;
reg    layer_in_row_Array_V_0_0_we0;
wire   [15:0] layer_in_row_Array_V_0_0_q0;
reg    layer_in_row_Array_V_1_0_ce0;
reg    layer_in_row_Array_V_1_0_we0;
wire   [15:0] layer_in_row_Array_V_1_0_q0;
reg    layer_in_row_Array_V_0_1_ce0;
reg    layer_in_row_Array_V_0_1_we0;
wire   [15:0] layer_in_row_Array_V_0_1_q0;
reg    layer_in_row_Array_V_1_1_ce0;
reg    layer_in_row_Array_V_1_1_we0;
wire   [15:0] layer_in_row_Array_V_1_1_q0;
reg    layer_in_row_Array_V_0_2_ce0;
reg    layer_in_row_Array_V_0_2_we0;
wire   [15:0] layer_in_row_Array_V_0_2_q0;
reg    layer_in_row_Array_V_1_2_ce0;
reg    layer_in_row_Array_V_1_2_we0;
wire   [15:0] layer_in_row_Array_V_1_2_q0;
reg    layer_in_row_Array_V_0_3_ce0;
reg    layer_in_row_Array_V_0_3_we0;
wire   [15:0] layer_in_row_Array_V_0_3_d0;
wire   [15:0] layer_in_row_Array_V_0_3_q0;
reg    layer_in_row_Array_V_1_3_ce0;
reg    layer_in_row_Array_V_1_3_we0;
wire   [15:0] layer_in_row_Array_V_1_3_q0;
reg    layer_in_row_Array_V_0_4_ce0;
reg    layer_in_row_Array_V_0_4_we0;
wire   [15:0] layer_in_row_Array_V_0_4_q0;
reg    layer_in_row_Array_V_1_4_ce0;
reg    layer_in_row_Array_V_1_4_we0;
wire   [15:0] layer_in_row_Array_V_1_4_q0;
reg    layer_in_row_Array_V_0_5_ce0;
reg    layer_in_row_Array_V_0_5_we0;
wire   [15:0] layer_in_row_Array_V_0_5_q0;
reg    layer_in_row_Array_V_1_5_ce0;
reg    layer_in_row_Array_V_1_5_we0;
wire   [15:0] layer_in_row_Array_V_1_5_q0;
reg    layer_in_row_Array_V_0_6_ce0;
reg    layer_in_row_Array_V_0_6_we0;
wire   [15:0] layer_in_row_Array_V_0_6_d0;
wire   [15:0] layer_in_row_Array_V_0_6_q0;
reg    layer_in_row_Array_V_1_6_ce0;
reg    layer_in_row_Array_V_1_6_we0;
wire   [15:0] layer_in_row_Array_V_1_6_q0;
reg    layer_in_row_Array_V_0_7_ce0;
reg    layer_in_row_Array_V_0_7_we0;
wire   [15:0] layer_in_row_Array_V_0_7_q0;
reg    layer_in_row_Array_V_1_7_ce0;
reg    layer_in_row_Array_V_1_7_we0;
wire   [15:0] layer_in_row_Array_V_1_7_q0;
wire   [31:0] grp_fu_244_p4;
reg   [31:0] reg_304;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state5;
wire   [31:0] grp_fu_274_p4;
reg   [31:0] reg_308;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state6;
wire   [15:0] trunc_ln203_fu_312_p1;
reg   [15:0] trunc_ln203_reg_764;
reg   [15:0] DataIn_V_assign_2_reg_769;
reg   [15:0] DataIn_V_assign_4_reg_775;
reg   [15:0] DataIn_V_assign_6_reg_781;
reg   [15:0] DataOut_V_7_reg_786;
reg   [15:0] DataIn_V_assign_8_reg_791;
reg   [15:0] DataIn_V_assign_s_reg_797;
reg   [15:0] DataIn_V_assign_1_reg_803;
reg   [15:0] DataOut_V_12_reg_808;
reg   [15:0] DataIn_V_assign_3_reg_813;
reg   [31:0] tmp_1_reg_830;
wire   [31:0] trunc_ln203_1_fu_436_p1;
reg   [31:0] trunc_ln203_1_reg_835;
reg   [15:0] DataOut_V_10_reg_840;
wire    ap_CS_fsm_state3;
reg   [15:0] tmp_22_reg_856;
reg   [31:0] tmp_5_reg_861;
wire   [31:0] grp_fu_264_p4;
reg   [31:0] tmp_6_reg_866;
reg   [15:0] DataOut_V_3_reg_871;
reg   [15:0] DataOut_V_14_reg_876;
reg   [15:0] tmp_18_reg_892;
wire   [31:0] grp_fu_254_p4;
reg   [31:0] tmp_10_reg_897;
reg   [15:0] DataOut_V_1_reg_902;
reg   [15:0] DataOut_V_5_reg_907;
reg   [63:0] tmp_14_reg_917;
reg   [15:0] DataOut_V_9_reg_922;
wire   [15:0] grp_fu_284_p4;
reg   [15:0] tmp_20_reg_927;
wire   [31:0] grp_fu_294_p4;
reg   [31:0] tmp_31_reg_932;
reg   [127:0] ap_port_reg_data_V_read;
wire   [127:0] tmp_24_fu_450_p7;
wire   [127:0] tmp_26_fu_516_p5;
wire   [127:0] tmp_28_fu_576_p7;
wire   [127:0] tmp_23_fu_630_p6;
wire   [127:0] tmp_30_fu_652_p7;
wire   [127:0] tmp_25_fu_695_p7;
wire   [127:0] tmp_27_fu_707_p7;
wire    ap_CS_fsm_state7;
wire   [127:0] tmp_29_fu_729_p5;
wire   [127:0] tmp_32_fu_739_p7;
wire   [15:0] tmp_19_fu_416_p4;
wire   [31:0] tmp_3_fu_440_p4;
wire   [63:0] tmp_7_fu_506_p4;
wire   [15:0] tmp_21_fu_566_p4;
reg   [6:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 7'd1;
end

cnnshift_arr_ap_fixed_ap_fixed_16_14_5_3_0_config2_s_layebkb #(
    .DataWidth( 16 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
layer_in_row_Array_V_0_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(3'd4),
    .ce0(layer_in_row_Array_V_0_0_ce0),
    .we0(layer_in_row_Array_V_0_0_we0),
    .d0(trunc_ln203_reg_764),
    .q0(layer_in_row_Array_V_0_0_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_14_5_3_0_config2_s_layebkb #(
    .DataWidth( 16 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
layer_in_row_Array_V_1_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(3'd4),
    .ce0(layer_in_row_Array_V_1_0_ce0),
    .we0(layer_in_row_Array_V_1_0_we0),
    .d0(layer_in_row_Array_V_0_0_q0),
    .q0(layer_in_row_Array_V_1_0_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_14_5_3_0_config2_s_layebkb #(
    .DataWidth( 16 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
layer_in_row_Array_V_0_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(3'd4),
    .ce0(layer_in_row_Array_V_0_1_ce0),
    .we0(layer_in_row_Array_V_0_1_we0),
    .d0(DataIn_V_assign_2_reg_769),
    .q0(layer_in_row_Array_V_0_1_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_14_5_3_0_config2_s_layebkb #(
    .DataWidth( 16 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
layer_in_row_Array_V_1_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(3'd4),
    .ce0(layer_in_row_Array_V_1_1_ce0),
    .we0(layer_in_row_Array_V_1_1_we0),
    .d0(DataOut_V_3_reg_871),
    .q0(layer_in_row_Array_V_1_1_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_14_5_3_0_config2_s_layebkb #(
    .DataWidth( 16 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
layer_in_row_Array_V_0_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(3'd4),
    .ce0(layer_in_row_Array_V_0_2_ce0),
    .we0(layer_in_row_Array_V_0_2_we0),
    .d0(DataIn_V_assign_4_reg_775),
    .q0(layer_in_row_Array_V_0_2_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_14_5_3_0_config2_s_layebkb #(
    .DataWidth( 16 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
layer_in_row_Array_V_1_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(3'd4),
    .ce0(layer_in_row_Array_V_1_2_ce0),
    .we0(layer_in_row_Array_V_1_2_we0),
    .d0(layer_in_row_Array_V_0_2_q0),
    .q0(layer_in_row_Array_V_1_2_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_14_5_3_0_config2_s_layebkb #(
    .DataWidth( 16 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
layer_in_row_Array_V_0_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(3'd4),
    .ce0(layer_in_row_Array_V_0_3_ce0),
    .we0(layer_in_row_Array_V_0_3_we0),
    .d0(layer_in_row_Array_V_0_3_d0),
    .q0(layer_in_row_Array_V_0_3_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_14_5_3_0_config2_s_layebkb #(
    .DataWidth( 16 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
layer_in_row_Array_V_1_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(3'd4),
    .ce0(layer_in_row_Array_V_1_3_ce0),
    .we0(layer_in_row_Array_V_1_3_we0),
    .d0(layer_in_row_Array_V_0_3_q0),
    .q0(layer_in_row_Array_V_1_3_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_14_5_3_0_config2_s_layebkb #(
    .DataWidth( 16 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
layer_in_row_Array_V_0_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(3'd4),
    .ce0(layer_in_row_Array_V_0_4_ce0),
    .we0(layer_in_row_Array_V_0_4_we0),
    .d0(DataIn_V_assign_8_reg_791),
    .q0(layer_in_row_Array_V_0_4_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_14_5_3_0_config2_s_layebkb #(
    .DataWidth( 16 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
layer_in_row_Array_V_1_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(3'd4),
    .ce0(layer_in_row_Array_V_1_4_ce0),
    .we0(layer_in_row_Array_V_1_4_we0),
    .d0(layer_in_row_Array_V_0_4_q0),
    .q0(layer_in_row_Array_V_1_4_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_14_5_3_0_config2_s_layebkb #(
    .DataWidth( 16 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
layer_in_row_Array_V_0_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(3'd4),
    .ce0(layer_in_row_Array_V_0_5_ce0),
    .we0(layer_in_row_Array_V_0_5_we0),
    .d0(DataIn_V_assign_s_reg_797),
    .q0(layer_in_row_Array_V_0_5_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_14_5_3_0_config2_s_layebkb #(
    .DataWidth( 16 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
layer_in_row_Array_V_1_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(3'd4),
    .ce0(layer_in_row_Array_V_1_5_ce0),
    .we0(layer_in_row_Array_V_1_5_we0),
    .d0(layer_in_row_Array_V_0_5_q0),
    .q0(layer_in_row_Array_V_1_5_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_14_5_3_0_config2_s_layebkb #(
    .DataWidth( 16 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
layer_in_row_Array_V_0_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(3'd4),
    .ce0(layer_in_row_Array_V_0_6_ce0),
    .we0(layer_in_row_Array_V_0_6_we0),
    .d0(layer_in_row_Array_V_0_6_d0),
    .q0(layer_in_row_Array_V_0_6_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_14_5_3_0_config2_s_layebkb #(
    .DataWidth( 16 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
layer_in_row_Array_V_1_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(3'd4),
    .ce0(layer_in_row_Array_V_1_6_ce0),
    .we0(layer_in_row_Array_V_1_6_we0),
    .d0(DataOut_V_12_reg_808),
    .q0(layer_in_row_Array_V_1_6_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_14_5_3_0_config2_s_layebkb #(
    .DataWidth( 16 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
layer_in_row_Array_V_0_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(3'd4),
    .ce0(layer_in_row_Array_V_0_7_ce0),
    .we0(layer_in_row_Array_V_0_7_we0),
    .d0(DataIn_V_assign_3_reg_813),
    .q0(layer_in_row_Array_V_0_7_q0)
);

cnnshift_arr_ap_fixed_ap_fixed_16_14_5_3_0_config2_s_layebkb #(
    .DataWidth( 16 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
layer_in_row_Array_V_1_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(3'd4),
    .ce0(layer_in_row_Array_V_1_7_ce0),
    .we0(layer_in_row_Array_V_1_7_we0),
    .d0(layer_in_row_Array_V_0_7_q0),
    .q0(layer_in_row_Array_V_1_7_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        DataIn_V_assign_1_reg_803 <= {{ap_port_reg_data_V_read[111:96]}};
        DataIn_V_assign_2_reg_769 <= {{ap_port_reg_data_V_read[31:16]}};
        DataIn_V_assign_3_reg_813 <= {{ap_port_reg_data_V_read[127:112]}};
        DataIn_V_assign_4_reg_775 <= {{ap_port_reg_data_V_read[47:32]}};
        DataIn_V_assign_6_reg_781 <= {{ap_port_reg_data_V_read[63:48]}};
        DataIn_V_assign_8_reg_791 <= {{ap_port_reg_data_V_read[79:64]}};
        DataIn_V_assign_s_reg_797 <= {{ap_port_reg_data_V_read[95:80]}};
        DataOut_V_12_reg_808 <= layer_in_row_Array_V_0_6_q0;
        DataOut_V_7_reg_786 <= layer_in_row_Array_V_0_3_q0;
        tmp_1_reg_830 <= {{output_V_q0[79:48]}};
        trunc_ln203_1_reg_835 <= trunc_ln203_1_fu_436_p1;
        trunc_ln203_reg_764 <= trunc_ln203_fu_312_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        DataOut_V_10_reg_840 <= layer_in_row_Array_V_0_5_q0;
        tmp_22_reg_856 <= {{output_V_q0[127:112]}};
        tmp_5_reg_861 <= {{output_V_q0[95:64]}};
        tmp_6_reg_866 <= {{output_V_q0[47:16]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        DataOut_V_14_reg_876 <= layer_in_row_Array_V_0_7_q0;
        DataOut_V_3_reg_871 <= layer_in_row_Array_V_0_1_q0;
        tmp_10_reg_897 <= {{output_V_q1[47:16]}};
        tmp_18_reg_892 <= {{output_V_q1[79:64]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        DataOut_V_1_reg_902 <= layer_in_row_Array_V_0_0_q0;
        DataOut_V_5_reg_907 <= layer_in_row_Array_V_0_2_q0;
        tmp_14_reg_917 <= {{output_V_q0[79:16]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        DataOut_V_9_reg_922 <= layer_in_row_Array_V_0_4_q0;
        tmp_20_reg_927 <= {{output_V_q1[31:16]}};
        tmp_31_reg_932 <= {{output_V_q1[79:48]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        ap_port_reg_data_V_read <= data_V_read;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state2))) begin
        reg_304 <= {{output_V_q0[127:96]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4))) begin
        reg_308 <= {{output_V_q1[127:96]}};
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        layer_in_row_Array_V_0_0_ce0 = 1'd1;
    end else begin
        layer_in_row_Array_V_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        layer_in_row_Array_V_0_0_we0 = 1'd1;
    end else begin
        layer_in_row_Array_V_0_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        layer_in_row_Array_V_0_1_ce0 = 1'd1;
    end else begin
        layer_in_row_Array_V_0_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        layer_in_row_Array_V_0_1_we0 = 1'd1;
    end else begin
        layer_in_row_Array_V_0_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        layer_in_row_Array_V_0_2_ce0 = 1'd1;
    end else begin
        layer_in_row_Array_V_0_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        layer_in_row_Array_V_0_2_we0 = 1'd1;
    end else begin
        layer_in_row_Array_V_0_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        layer_in_row_Array_V_0_3_ce0 = 1'd1;
    end else begin
        layer_in_row_Array_V_0_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        layer_in_row_Array_V_0_3_we0 = 1'd1;
    end else begin
        layer_in_row_Array_V_0_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        layer_in_row_Array_V_0_4_ce0 = 1'd1;
    end else begin
        layer_in_row_Array_V_0_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        layer_in_row_Array_V_0_4_we0 = 1'd1;
    end else begin
        layer_in_row_Array_V_0_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        layer_in_row_Array_V_0_5_ce0 = 1'd1;
    end else begin
        layer_in_row_Array_V_0_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        layer_in_row_Array_V_0_5_we0 = 1'd1;
    end else begin
        layer_in_row_Array_V_0_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        layer_in_row_Array_V_0_6_ce0 = 1'd1;
    end else begin
        layer_in_row_Array_V_0_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        layer_in_row_Array_V_0_6_we0 = 1'd1;
    end else begin
        layer_in_row_Array_V_0_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        layer_in_row_Array_V_0_7_ce0 = 1'd1;
    end else begin
        layer_in_row_Array_V_0_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        layer_in_row_Array_V_0_7_we0 = 1'd1;
    end else begin
        layer_in_row_Array_V_0_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        layer_in_row_Array_V_1_0_ce0 = 1'd1;
    end else begin
        layer_in_row_Array_V_1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        layer_in_row_Array_V_1_0_we0 = 1'd1;
    end else begin
        layer_in_row_Array_V_1_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        layer_in_row_Array_V_1_1_ce0 = 1'd1;
    end else begin
        layer_in_row_Array_V_1_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        layer_in_row_Array_V_1_1_we0 = 1'd1;
    end else begin
        layer_in_row_Array_V_1_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        layer_in_row_Array_V_1_2_ce0 = 1'd1;
    end else begin
        layer_in_row_Array_V_1_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        layer_in_row_Array_V_1_2_we0 = 1'd1;
    end else begin
        layer_in_row_Array_V_1_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        layer_in_row_Array_V_1_3_ce0 = 1'd1;
    end else begin
        layer_in_row_Array_V_1_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        layer_in_row_Array_V_1_3_we0 = 1'd1;
    end else begin
        layer_in_row_Array_V_1_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        layer_in_row_Array_V_1_4_ce0 = 1'd1;
    end else begin
        layer_in_row_Array_V_1_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        layer_in_row_Array_V_1_4_we0 = 1'd1;
    end else begin
        layer_in_row_Array_V_1_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        layer_in_row_Array_V_1_5_ce0 = 1'd1;
    end else begin
        layer_in_row_Array_V_1_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        layer_in_row_Array_V_1_5_we0 = 1'd1;
    end else begin
        layer_in_row_Array_V_1_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        layer_in_row_Array_V_1_6_ce0 = 1'd1;
    end else begin
        layer_in_row_Array_V_1_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        layer_in_row_Array_V_1_6_we0 = 1'd1;
    end else begin
        layer_in_row_Array_V_1_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        layer_in_row_Array_V_1_7_ce0 = 1'd1;
    end else begin
        layer_in_row_Array_V_1_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        layer_in_row_Array_V_1_7_we0 = 1'd1;
    end else begin
        layer_in_row_Array_V_1_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        output_V_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        output_V_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        output_V_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        output_V_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        output_V_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        output_V_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        output_V_address0 = 64'd8;
    end else begin
        output_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        output_V_address1 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        output_V_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        output_V_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        output_V_address1 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        output_V_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        output_V_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        output_V_address1 = 64'd0;
    end else begin
        output_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        output_V_ce0 = 1'b1;
    end else begin
        output_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        output_V_ce1 = 1'b1;
    end else begin
        output_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        output_V_d0 = tmp_29_fu_729_p5;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        output_V_d0 = tmp_25_fu_695_p7;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        output_V_d0 = tmp_23_fu_630_p6;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        output_V_d0 = tmp_28_fu_576_p7;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        output_V_d0 = tmp_24_fu_450_p7;
    end else begin
        output_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        output_V_d1 = tmp_32_fu_739_p7;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        output_V_d1 = tmp_27_fu_707_p7;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        output_V_d1 = tmp_30_fu_652_p7;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        output_V_d1 = tmp_26_fu_516_p5;
    end else begin
        output_V_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state2))) begin
        output_V_we0 = 1'b1;
    end else begin
        output_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        output_V_we1 = 1'b1;
    end else begin
        output_V_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign grp_fu_244_p4 = {{output_V_q0[127:96]}};

assign grp_fu_254_p4 = {{output_V_q1[47:16]}};

assign grp_fu_264_p4 = {{output_V_q0[47:16]}};

assign grp_fu_274_p4 = {{output_V_q1[127:96]}};

assign grp_fu_284_p4 = {{output_V_q1[31:16]}};

assign grp_fu_294_p4 = {{output_V_q1[79:48]}};

assign layer_in_row_Array_V_0_3_d0 = {{ap_port_reg_data_V_read[63:48]}};

assign layer_in_row_Array_V_0_6_d0 = {{ap_port_reg_data_V_read[111:96]}};

assign tmp_19_fu_416_p4 = {{output_V_q1[127:112]}};

assign tmp_21_fu_566_p4 = {{output_V_q0[79:64]}};

assign tmp_23_fu_630_p6 = {{{{{reg_304}, {DataOut_V_10_reg_840}}, {tmp_1_reg_830}}, {layer_in_row_Array_V_1_2_q0}}, {trunc_ln203_1_reg_835}};

assign tmp_24_fu_450_p7 = {{{{{{trunc_ln203_fu_312_p1}, {tmp_19_fu_416_p4}}, {layer_in_row_Array_V_0_6_q0}}, {tmp_3_fu_440_p4}}, {layer_in_row_Array_V_1_3_q0}}, {grp_fu_254_p4}};

assign tmp_25_fu_695_p7 = {{{{{{DataIn_V_assign_2_reg_769}, {tmp_22_reg_856}}, {DataOut_V_14_reg_876}}, {tmp_5_reg_861}}, {layer_in_row_Array_V_1_4_q0}}, {tmp_6_reg_866}};

assign tmp_26_fu_516_p5 = {{{{DataIn_V_assign_4_reg_775}, {tmp_7_fu_506_p4}}, {layer_in_row_Array_V_1_5_q0}}, {grp_fu_254_p4}};

assign tmp_27_fu_707_p7 = {{{{{{DataIn_V_assign_6_reg_781}, {reg_308}}, {DataOut_V_1_reg_902}}, {tmp_18_reg_892}}, {layer_in_row_Array_V_1_6_q0}}, {tmp_10_reg_897}};

assign tmp_28_fu_576_p7 = {{{{{{DataIn_V_assign_8_reg_791}, {grp_fu_244_p4}}, {layer_in_row_Array_V_0_1_q0}}, {tmp_21_fu_566_p4}}, {layer_in_row_Array_V_1_7_q0}}, {grp_fu_264_p4}};

assign tmp_29_fu_729_p5 = {{{{DataIn_V_assign_s_reg_797}, {reg_304}}, {DataOut_V_5_reg_907}}, {tmp_14_reg_917}};

assign tmp_30_fu_652_p7 = {{{{{{DataIn_V_assign_1_reg_803}, {grp_fu_274_p4}}, {DataOut_V_7_reg_786}}, {grp_fu_294_p4}}, {layer_in_row_Array_V_1_0_q0}}, {grp_fu_284_p4}};

assign tmp_32_fu_739_p7 = {{{{{{DataIn_V_assign_3_reg_813}, {reg_308}}, {DataOut_V_9_reg_922}}, {tmp_31_reg_932}}, {layer_in_row_Array_V_1_1_q0}}, {tmp_20_reg_927}};

assign tmp_3_fu_440_p4 = {{output_V_q1[95:64]}};

assign tmp_7_fu_506_p4 = {{output_V_q1[127:64]}};

assign trunc_ln203_1_fu_436_p1 = output_V_q0[31:0];

assign trunc_ln203_fu_312_p1 = ap_port_reg_data_V_read[15:0];

endmodule //cnnshift_arr_ap_fixed_ap_fixed_16_14_5_3_0_config2_s
