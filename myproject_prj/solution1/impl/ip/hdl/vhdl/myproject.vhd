-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity myproject is
port (
    input_1_0_V_V_TDATA : IN STD_LOGIC_VECTOR (15 downto 0);
    input_1_1_V_V_TDATA : IN STD_LOGIC_VECTOR (15 downto 0);
    input_1_2_V_V_TDATA : IN STD_LOGIC_VECTOR (15 downto 0);
    input_1_3_V_V_TDATA : IN STD_LOGIC_VECTOR (15 downto 0);
    layer2_out_0_V_V_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    layer2_out_1_V_V_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    layer2_out_2_V_V_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    layer2_out_3_V_V_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    const_size_in_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    const_size_out_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    const_size_in_1_ap_vld : OUT STD_LOGIC;
    const_size_out_1_ap_vld : OUT STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    input_1_0_V_V_TVALID : IN STD_LOGIC;
    input_1_0_V_V_TREADY : OUT STD_LOGIC;
    input_1_1_V_V_TVALID : IN STD_LOGIC;
    input_1_1_V_V_TREADY : OUT STD_LOGIC;
    input_1_2_V_V_TVALID : IN STD_LOGIC;
    input_1_2_V_V_TREADY : OUT STD_LOGIC;
    input_1_3_V_V_TVALID : IN STD_LOGIC;
    input_1_3_V_V_TREADY : OUT STD_LOGIC;
    layer2_out_0_V_V_TVALID : OUT STD_LOGIC;
    layer2_out_0_V_V_TREADY : IN STD_LOGIC;
    layer2_out_1_V_V_TVALID : OUT STD_LOGIC;
    layer2_out_1_V_V_TREADY : IN STD_LOGIC;
    layer2_out_2_V_V_TVALID : OUT STD_LOGIC;
    layer2_out_2_V_V_TREADY : IN STD_LOGIC;
    layer2_out_3_V_V_TVALID : OUT STD_LOGIC;
    layer2_out_3_V_V_TREADY : IN STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC );
end;


architecture behav of myproject is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "myproject,hls_ip_2019_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xczu9eg-ffvb1156-2-e,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=1.396500,HLS_SYN_LAT=619,HLS_SYN_TPT=620,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=87,HLS_SYN_LUT=368,HLS_VERSION=2019_2}";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_rst_n_inv : STD_LOGIC;
    signal Block_proc_U0_ap_start : STD_LOGIC;
    signal Block_proc_U0_ap_done : STD_LOGIC;
    signal Block_proc_U0_ap_continue : STD_LOGIC;
    signal Block_proc_U0_ap_idle : STD_LOGIC;
    signal Block_proc_U0_ap_ready : STD_LOGIC;
    signal Block_proc_U0_const_size_in_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal Block_proc_U0_const_size_in_1_ap_vld : STD_LOGIC;
    signal Block_proc_U0_const_size_out_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal Block_proc_U0_const_size_out_1_ap_vld : STD_LOGIC;
    signal ap_sync_continue : STD_LOGIC;
    signal relu_array_ap_fixed_ap_fixed_relu_config55_U0_ap_start : STD_LOGIC;
    signal relu_array_ap_fixed_ap_fixed_relu_config55_U0_ap_done : STD_LOGIC;
    signal relu_array_ap_fixed_ap_fixed_relu_config55_U0_ap_continue : STD_LOGIC;
    signal relu_array_ap_fixed_ap_fixed_relu_config55_U0_ap_idle : STD_LOGIC;
    signal relu_array_ap_fixed_ap_fixed_relu_config55_U0_ap_ready : STD_LOGIC;
    signal relu_array_ap_fixed_ap_fixed_relu_config55_U0_data_0_V_V_TREADY : STD_LOGIC;
    signal relu_array_ap_fixed_ap_fixed_relu_config55_U0_data_1_V_V_TREADY : STD_LOGIC;
    signal relu_array_ap_fixed_ap_fixed_relu_config55_U0_data_2_V_V_TREADY : STD_LOGIC;
    signal relu_array_ap_fixed_ap_fixed_relu_config55_U0_data_3_V_V_TREADY : STD_LOGIC;
    signal relu_array_ap_fixed_ap_fixed_relu_config55_U0_res_0_V_V_TDATA : STD_LOGIC_VECTOR (15 downto 0);
    signal relu_array_ap_fixed_ap_fixed_relu_config55_U0_res_0_V_V_TVALID : STD_LOGIC;
    signal relu_array_ap_fixed_ap_fixed_relu_config55_U0_res_1_V_V_TDATA : STD_LOGIC_VECTOR (15 downto 0);
    signal relu_array_ap_fixed_ap_fixed_relu_config55_U0_res_1_V_V_TVALID : STD_LOGIC;
    signal relu_array_ap_fixed_ap_fixed_relu_config55_U0_res_2_V_V_TDATA : STD_LOGIC_VECTOR (15 downto 0);
    signal relu_array_ap_fixed_ap_fixed_relu_config55_U0_res_2_V_V_TVALID : STD_LOGIC;
    signal relu_array_ap_fixed_ap_fixed_relu_config55_U0_res_3_V_V_TDATA : STD_LOGIC_VECTOR (15 downto 0);
    signal relu_array_ap_fixed_ap_fixed_relu_config55_U0_res_3_V_V_TVALID : STD_LOGIC;
    signal ap_sync_done : STD_LOGIC;
    signal ap_sync_ready : STD_LOGIC;
    signal ap_sync_reg_Block_proc_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_Block_proc_U0_ap_ready : STD_LOGIC;
    signal Block_proc_U0_ap_ready_count : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal ap_sync_reg_relu_array_ap_fixed_ap_fixed_relu_config55_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_relu_array_ap_fixed_ap_fixed_relu_config55_U0_ap_ready : STD_LOGIC;
    signal relu_array_ap_fixed_ap_fixed_relu_config55_U0_ap_ready_count : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal Block_proc_U0_start_full_n : STD_LOGIC;
    signal Block_proc_U0_start_write : STD_LOGIC;
    signal relu_array_ap_fixed_ap_fixed_relu_config55_U0_start_full_n : STD_LOGIC;
    signal relu_array_ap_fixed_ap_fixed_relu_config55_U0_start_write : STD_LOGIC;

    component Block_proc IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        const_size_in_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        const_size_in_1_ap_vld : OUT STD_LOGIC;
        const_size_out_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        const_size_out_1_ap_vld : OUT STD_LOGIC );
    end component;


    component relu_array_ap_fixed_ap_fixed_relu_config55_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        data_0_V_V_TDATA : IN STD_LOGIC_VECTOR (15 downto 0);
        data_0_V_V_TVALID : IN STD_LOGIC;
        data_0_V_V_TREADY : OUT STD_LOGIC;
        data_1_V_V_TDATA : IN STD_LOGIC_VECTOR (15 downto 0);
        data_1_V_V_TVALID : IN STD_LOGIC;
        data_1_V_V_TREADY : OUT STD_LOGIC;
        data_2_V_V_TDATA : IN STD_LOGIC_VECTOR (15 downto 0);
        data_2_V_V_TVALID : IN STD_LOGIC;
        data_2_V_V_TREADY : OUT STD_LOGIC;
        data_3_V_V_TDATA : IN STD_LOGIC_VECTOR (15 downto 0);
        data_3_V_V_TVALID : IN STD_LOGIC;
        data_3_V_V_TREADY : OUT STD_LOGIC;
        res_0_V_V_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
        res_0_V_V_TVALID : OUT STD_LOGIC;
        res_0_V_V_TREADY : IN STD_LOGIC;
        res_1_V_V_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
        res_1_V_V_TVALID : OUT STD_LOGIC;
        res_1_V_V_TREADY : IN STD_LOGIC;
        res_2_V_V_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
        res_2_V_V_TVALID : OUT STD_LOGIC;
        res_2_V_V_TREADY : IN STD_LOGIC;
        res_3_V_V_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
        res_3_V_V_TVALID : OUT STD_LOGIC;
        res_3_V_V_TREADY : IN STD_LOGIC );
    end component;



begin
    Block_proc_U0 : component Block_proc
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Block_proc_U0_ap_start,
        ap_done => Block_proc_U0_ap_done,
        ap_continue => Block_proc_U0_ap_continue,
        ap_idle => Block_proc_U0_ap_idle,
        ap_ready => Block_proc_U0_ap_ready,
        const_size_in_1 => Block_proc_U0_const_size_in_1,
        const_size_in_1_ap_vld => Block_proc_U0_const_size_in_1_ap_vld,
        const_size_out_1 => Block_proc_U0_const_size_out_1,
        const_size_out_1_ap_vld => Block_proc_U0_const_size_out_1_ap_vld);

    relu_array_ap_fixed_ap_fixed_relu_config55_U0 : component relu_array_ap_fixed_ap_fixed_relu_config55_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => relu_array_ap_fixed_ap_fixed_relu_config55_U0_ap_start,
        ap_done => relu_array_ap_fixed_ap_fixed_relu_config55_U0_ap_done,
        ap_continue => relu_array_ap_fixed_ap_fixed_relu_config55_U0_ap_continue,
        ap_idle => relu_array_ap_fixed_ap_fixed_relu_config55_U0_ap_idle,
        ap_ready => relu_array_ap_fixed_ap_fixed_relu_config55_U0_ap_ready,
        data_0_V_V_TDATA => input_1_0_V_V_TDATA,
        data_0_V_V_TVALID => input_1_0_V_V_TVALID,
        data_0_V_V_TREADY => relu_array_ap_fixed_ap_fixed_relu_config55_U0_data_0_V_V_TREADY,
        data_1_V_V_TDATA => input_1_1_V_V_TDATA,
        data_1_V_V_TVALID => input_1_1_V_V_TVALID,
        data_1_V_V_TREADY => relu_array_ap_fixed_ap_fixed_relu_config55_U0_data_1_V_V_TREADY,
        data_2_V_V_TDATA => input_1_2_V_V_TDATA,
        data_2_V_V_TVALID => input_1_2_V_V_TVALID,
        data_2_V_V_TREADY => relu_array_ap_fixed_ap_fixed_relu_config55_U0_data_2_V_V_TREADY,
        data_3_V_V_TDATA => input_1_3_V_V_TDATA,
        data_3_V_V_TVALID => input_1_3_V_V_TVALID,
        data_3_V_V_TREADY => relu_array_ap_fixed_ap_fixed_relu_config55_U0_data_3_V_V_TREADY,
        res_0_V_V_TDATA => relu_array_ap_fixed_ap_fixed_relu_config55_U0_res_0_V_V_TDATA,
        res_0_V_V_TVALID => relu_array_ap_fixed_ap_fixed_relu_config55_U0_res_0_V_V_TVALID,
        res_0_V_V_TREADY => layer2_out_0_V_V_TREADY,
        res_1_V_V_TDATA => relu_array_ap_fixed_ap_fixed_relu_config55_U0_res_1_V_V_TDATA,
        res_1_V_V_TVALID => relu_array_ap_fixed_ap_fixed_relu_config55_U0_res_1_V_V_TVALID,
        res_1_V_V_TREADY => layer2_out_1_V_V_TREADY,
        res_2_V_V_TDATA => relu_array_ap_fixed_ap_fixed_relu_config55_U0_res_2_V_V_TDATA,
        res_2_V_V_TVALID => relu_array_ap_fixed_ap_fixed_relu_config55_U0_res_2_V_V_TVALID,
        res_2_V_V_TREADY => layer2_out_2_V_V_TREADY,
        res_3_V_V_TDATA => relu_array_ap_fixed_ap_fixed_relu_config55_U0_res_3_V_V_TDATA,
        res_3_V_V_TVALID => relu_array_ap_fixed_ap_fixed_relu_config55_U0_res_3_V_V_TVALID,
        res_3_V_V_TREADY => layer2_out_3_V_V_TREADY);





    ap_sync_reg_Block_proc_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_Block_proc_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_Block_proc_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_Block_proc_U0_ap_ready <= ap_sync_Block_proc_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_relu_array_ap_fixed_ap_fixed_relu_config55_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_relu_array_ap_fixed_ap_fixed_relu_config55_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_relu_array_ap_fixed_ap_fixed_relu_config55_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_relu_array_ap_fixed_ap_fixed_relu_config55_U0_ap_ready <= ap_sync_relu_array_ap_fixed_ap_fixed_relu_config55_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    Block_proc_U0_ap_ready_count_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_sync_ready = ap_const_logic_1) and (ap_const_logic_0 = Block_proc_U0_ap_ready))) then 
                Block_proc_U0_ap_ready_count <= std_logic_vector(unsigned(Block_proc_U0_ap_ready_count) - unsigned(ap_const_lv2_1));
            elsif (((ap_sync_ready = ap_const_logic_0) and (ap_const_logic_1 = Block_proc_U0_ap_ready))) then 
                Block_proc_U0_ap_ready_count <= std_logic_vector(unsigned(Block_proc_U0_ap_ready_count) + unsigned(ap_const_lv2_1));
            end if; 
        end if;
    end process;

    relu_array_ap_fixed_ap_fixed_relu_config55_U0_ap_ready_count_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((relu_array_ap_fixed_ap_fixed_relu_config55_U0_ap_ready = ap_const_logic_0) and (ap_sync_ready = ap_const_logic_1))) then 
                relu_array_ap_fixed_ap_fixed_relu_config55_U0_ap_ready_count <= std_logic_vector(unsigned(relu_array_ap_fixed_ap_fixed_relu_config55_U0_ap_ready_count) - unsigned(ap_const_lv2_1));
            elsif (((ap_sync_ready = ap_const_logic_0) and (relu_array_ap_fixed_ap_fixed_relu_config55_U0_ap_ready = ap_const_logic_1))) then 
                relu_array_ap_fixed_ap_fixed_relu_config55_U0_ap_ready_count <= std_logic_vector(unsigned(relu_array_ap_fixed_ap_fixed_relu_config55_U0_ap_ready_count) + unsigned(ap_const_lv2_1));
            end if; 
        end if;
    end process;
    Block_proc_U0_ap_continue <= ap_sync_done;
    Block_proc_U0_ap_start <= ((ap_sync_reg_Block_proc_U0_ap_ready xor ap_const_logic_1) and ap_start);
    Block_proc_U0_start_full_n <= ap_const_logic_1;
    Block_proc_U0_start_write <= ap_const_logic_0;
    ap_done <= ap_sync_done;
    ap_idle <= (relu_array_ap_fixed_ap_fixed_relu_config55_U0_ap_idle and Block_proc_U0_ap_idle);
    ap_ready <= ap_sync_ready;

    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    ap_sync_Block_proc_U0_ap_ready <= (ap_sync_reg_Block_proc_U0_ap_ready or Block_proc_U0_ap_ready);
    ap_sync_continue <= ap_sync_done;
    ap_sync_done <= (relu_array_ap_fixed_ap_fixed_relu_config55_U0_ap_done and Block_proc_U0_ap_done);
    ap_sync_ready <= (ap_sync_relu_array_ap_fixed_ap_fixed_relu_config55_U0_ap_ready and ap_sync_Block_proc_U0_ap_ready);
    ap_sync_relu_array_ap_fixed_ap_fixed_relu_config55_U0_ap_ready <= (relu_array_ap_fixed_ap_fixed_relu_config55_U0_ap_ready or ap_sync_reg_relu_array_ap_fixed_ap_fixed_relu_config55_U0_ap_ready);
    const_size_in_1 <= Block_proc_U0_const_size_in_1;
    const_size_in_1_ap_vld <= Block_proc_U0_const_size_in_1_ap_vld;
    const_size_out_1 <= Block_proc_U0_const_size_out_1;
    const_size_out_1_ap_vld <= Block_proc_U0_const_size_out_1_ap_vld;
    input_1_0_V_V_TREADY <= relu_array_ap_fixed_ap_fixed_relu_config55_U0_data_0_V_V_TREADY;
    input_1_1_V_V_TREADY <= relu_array_ap_fixed_ap_fixed_relu_config55_U0_data_1_V_V_TREADY;
    input_1_2_V_V_TREADY <= relu_array_ap_fixed_ap_fixed_relu_config55_U0_data_2_V_V_TREADY;
    input_1_3_V_V_TREADY <= relu_array_ap_fixed_ap_fixed_relu_config55_U0_data_3_V_V_TREADY;
    layer2_out_0_V_V_TDATA <= relu_array_ap_fixed_ap_fixed_relu_config55_U0_res_0_V_V_TDATA;
    layer2_out_0_V_V_TVALID <= relu_array_ap_fixed_ap_fixed_relu_config55_U0_res_0_V_V_TVALID;
    layer2_out_1_V_V_TDATA <= relu_array_ap_fixed_ap_fixed_relu_config55_U0_res_1_V_V_TDATA;
    layer2_out_1_V_V_TVALID <= relu_array_ap_fixed_ap_fixed_relu_config55_U0_res_1_V_V_TVALID;
    layer2_out_2_V_V_TDATA <= relu_array_ap_fixed_ap_fixed_relu_config55_U0_res_2_V_V_TDATA;
    layer2_out_2_V_V_TVALID <= relu_array_ap_fixed_ap_fixed_relu_config55_U0_res_2_V_V_TVALID;
    layer2_out_3_V_V_TDATA <= relu_array_ap_fixed_ap_fixed_relu_config55_U0_res_3_V_V_TDATA;
    layer2_out_3_V_V_TVALID <= relu_array_ap_fixed_ap_fixed_relu_config55_U0_res_3_V_V_TVALID;
    relu_array_ap_fixed_ap_fixed_relu_config55_U0_ap_continue <= ap_sync_done;
    relu_array_ap_fixed_ap_fixed_relu_config55_U0_ap_start <= ((ap_sync_reg_relu_array_ap_fixed_ap_fixed_relu_config55_U0_ap_ready xor ap_const_logic_1) and ap_start);
    relu_array_ap_fixed_ap_fixed_relu_config55_U0_start_full_n <= ap_const_logic_1;
    relu_array_ap_fixed_ap_fixed_relu_config55_U0_start_write <= ap_const_logic_0;
end behav;
